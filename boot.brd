# В пространстве бут-скрипта сразу присутствуют все встроенные элементы языка,
# но в модулях их нужно будет импортировать,
# специально что бы была возможность переопределять язык в пространстве скриптов



# Инициируем контексты для работы и импортируем базовые элементы для работы
(context.define $CTX$ (context.getContext))
(context.define $CTXModule$  (table.create))
(table.importAll context $CTX$)
(table.importAll console $CTX$)
(table.importAll math $CTX$)
(table.importAll lang $CTX$)



# Подгрузка частей загрузчика

# Поиск файлов в одной папке со скриптом
(define findFile (lambda [name]
	(fs.path.combine env.pathToWorkDirectory name)
))

# Подгрузка и исполнение
(define feval/cc (lambda [$path $preprocess]
	(define $content (fs.load $path))
	(if [not (null? $preprocess)]
		[set! $content ($preprocess $content)])
	(evalEach $CTX$ $content)
))



# Исполнение частей загрузчика
(feval/cc (findFile "boot.test.brd"))
(feval/cc (findFile "boot.test_env.brd"))
(feval/cc (findFile "boot.preprocessors.brd"))
(feval/cc (findFile "boot.preprocessors.test.brd"))
(feval/cc (findFile "boot.modules.stack.brd") DefaultPreprocess)
(feval/cc (findFile "boot.modules.loader.brd") DefaultPreprocess)
#(feval/cc (findFile "boot.modules.brd") DefaultPreprocess)

(print)