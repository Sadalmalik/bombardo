
(nope Test raw interval system)

(define `count 50)
(define `callback (lambda ()
	(if (> count 0)
		(block
			(set! `count (- count 1))
			(print (cons count "yo!"))
		)
		(block
			(interval-clear interval)
			(print "interval complete!")
		)
	))
)





(nope Create wrap object around interval system)

(define `interval (interval-set 100 callback))
(define `Timer (lambda (delay loop callback)
	(define `inner-timer
		((if loop interval-set timeout-set)
			(list `timer delay)
			callback))
	(lambda (x)
		(cond
			((eq? x `tag) ((if loop interval-tag timeout-tag) inner-timer))
			((eq? x `stop) ((if loop interval-clear timeout-clear) inner-timer))
			(true (error `Timer "Unknown command for timer!"))
		)
	)
))

(define `otherCount 10)
(define `otherCallback (lambda ()
	(if (> otherCount 0)
		(block
			(set! `otherCount (- otherCount 1))
			(print (cons otherCount "hay!"))
		)
		(block
			(otherInterval `stop)
			(print "other interval complete!")
		)
	)
))
(define `otherInterval (Timer 300 true otherCallback))