# В пространстве бут-скрипта сразу присутствуют все встроенные элементы языка,
# но в модулях их нужно будет импортировать,
# специально что бы была возможность переопределять язык в пространстве скриптов


# Инициируем контексты для работы и импортируем базовые элементы для работы
(context.define $CTX$ (context.getContext))
(table.importAll context $CTX$)
(table.importAll console $CTX$)
(table.importAll math $CTX$)
(table.importAll lang $CTX$)


# Подгрузка частей загрузчика
(define bootPath (fs.path.getDirectoryName env.pathToBoot))
(define findFile (lambda [name]
	# Поиск файлов в одной папке со скриптом
	(fs.path.combine bootPath name)
))
(define feval/cc (lambda [$path $preprocess]
	# Подгрузка и исполнение
	(define $content (fs.load $path))
	(if [not (null? $preprocess)]
		[set! $content ($preprocess $content)])
	(evalEach $CTX$ $content)
))


# Исполнение частей загрузчика
# (feval/cc (findFile "boot.test.brd"))
# (feval/cc (findFile "boot.test.lang.brd"))
# (feval/cc (findFile "boot.test.env.brd"))
(feval/cc (findFile "boot.preprocessors.brd"))
# (feval/cc (findFile "boot.preprocessors.test.brd"))
(feval/cc (findFile "boot.modules.stack.brd")	DefaultPreprocess)
(feval/cc (findFile "boot.modules.buildin.brd")	DefaultPreprocess)
(feval/cc (findFile "boot.modules.loader.brd")	DefaultPreprocess)
(feval/cc (findFile "boot.startup.brd")			DefaultPreprocess)
(print)
