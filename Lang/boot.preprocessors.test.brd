(define testPreprocessor (macros [$prepName $data]
	(define $prep (eval $prepName))
	(print $prepName ":" $data "->" ($prep $data))
))

(print "Test preprocess:")
(testPreprocessor PreprocessNull null)
(testPreprocessor PreprocessNull (null))
(testPreprocessor PreprocessNull (null null))
(testPreprocessor PreprocessNull (A null B))
(print)
(testPreprocessor PreprocessQuoting A)
(testPreprocessor PreprocessQuoting (`A))
(testPreprocessor PreprocessQuoting (``B))
(testPreprocessor PreprocessQuoting (```C))
(testPreprocessor PreprocessQuoting (A B `C D `E))
#(testPreprocessor PreprocessQuoting (`))
(print)
(testPreprocessor DefaultPreprocess (`null (A . B)))
(testPreprocessor DefaultPreprocess (print `null (null? `null)))
(testPreprocessor DefaultPreprocess (print null (null? null)))
(testPreprocessor DefaultPreprocess (print `(a . b)))
(print)

(undef testPreprocessor)